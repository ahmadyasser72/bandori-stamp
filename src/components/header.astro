---
import { Icon } from "astro-icon/components";
import { base } from "astro:config/server";

import { REGION_FLAG, REGION_FULLNAME, REGIONS } from "~/constants";

interface Props {
  title: string;
}

const { region } = Astro.params;
const { title } = Astro.props;
---

<header class="navbar bg-base-100 border-b px-4 lg:px-8">
  <div class="flex-1">
    <span class="btn btn-ghost text-lg sm:text-xl">{title}</span>
  </div>
  <div class="flex flex-none items-center space-x-2 sm:space-x-4">
    <label
      for="theme-controller"
      class="swap swap-rotate btn btn-circle btn-primary tooltip tooltip-bottom"
    >
      <input
        id="theme-controller"
        name="theme-controller"
        type="checkbox"
        class="theme-controller"
      />

      <Icon name="lucide:sun" class="swap-off size-6 fill-current" />
      <Icon name="lucide:moon-star" class="swap-on size-6 fill-current" />
      <span class="sr-only">Toggle theme</span>
    </label>

    <button
      class="btn btn-circle btn-secondary"
      popovertarget="region-popover"
      style="anchor-name:--anchor-region"
    >
      <Icon name="lucide:globe" class="size-6" />
    </button>
    <nav class="contents">
      <ul
        class="dropdown dropdown-end menu rounded-box bg-base-100 mt-4 shadow-sm"
        popover
        id="region-popover"
        style="position-anchor:--anchor-region"
      >
        {
          region !== undefined && (
            <li>
              <a href={base}>
                <Icon name="twemoji:globe-showing-americas" class="size-6" />
                All Server
              </a>
            </li>
          )
        }

        {
          REGIONS.filter((it) => it !== region).map((region) => (
            <li>
              <a href={`${base}/${region}`}>
                <Icon name={REGION_FLAG[region]} class="size-6" />
                {REGION_FULLNAME[region]}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <a
      class="btn btn-circle btn-outline"
      href="https://github.com/ahmadyasser72/bandori-stamp"
      target="_blank"
      rel="noopener noreferrer"
    >
      <Icon name="lucide:github" class="size-6" />
    </a>
  </div>
</header>

<script>
  const themeController = document.getElementById(
    "theme-controller"
  ) as HTMLInputElement;

  const toggleTheme = () => {
    const isDark = themeController.checked;
    const theme = isDark ? "dracula" : "bumblebee";

    document.documentElement.dataset.theme = theme;
    localStorage.setItem("is-dark", isDark ? "true" : "false");
  };

  document.addEventListener("astro:page-load", toggleTheme);
  themeController.addEventListener("input", toggleTheme);
  themeController.checked = localStorage.getItem("is-dark") === "true";
  toggleTheme();
</script>
